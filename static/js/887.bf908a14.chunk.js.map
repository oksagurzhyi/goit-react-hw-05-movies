{"version":3,"file":"static/js/887.bf908a14.chunk.js","mappings":"oKAqBA,IAnBkB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,GACCA,EAAKG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAC1B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,SACGG,KAFIC,EAMZ,KAGR,C,kGCSD,EA1BkB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,kBAAMH,SAVe,SAAAI,GACrBA,EAAEC,iBAEGH,GAGLF,EAASE,EACV,EAGC,WACE,kBAAOI,KAAK,OAAOC,KAAK,QAAQC,SAjBb,SAAAJ,GACrB,IAAMK,EAAeL,EAAEM,OAAOC,MAE9BR,EAASM,EACV,KAcG,mBAAQH,KAAK,SAAb,sBAGL,E,0BCYD,EAhCe,WACb,OAAwBL,EAAAA,EAAAA,UAAS,MAAjC,eAAOV,EAAP,KAAaqB,EAAb,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMN,EAAeK,EAAaE,IAAI,SAetC,OATAC,EAAAA,EAAAA,YAAU,WACHR,IAGLS,EAAAA,EAAAA,IAAiBT,GACdU,MAAK,SAAA5B,GAAI,OAAIqB,EAAQrB,EAAK6B,QAAjB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAR,iCAAgDA,EAApD,GACf,GAAE,CAACb,KAGF,iCACE,+BACE,SAAC,EAAD,CAAWT,SAhBA,SAAAE,GACfa,EAAgB,CAAEb,MAAOA,GAC1B,OAgBG,+BACE,SAACsB,EAAA,EAAD,CAAWjC,KAAMA,QAIxB,C,+LClCKkC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,kEACsCF,IAFxD,uBACGlC,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeqC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBF,EAAAA,EAAAA,IAAA,6CACiBE,EADjB,oBACqCJ,IAFvD,uBACGlC,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAAgChB,GAAhC,yFACkByB,EAAAA,EAAAA,IAAA,0DAC8BzB,EAD9B,oBAC+CuB,IAFjE,uBACGlC,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeuC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,yFACkBF,EAAAA,EAAAA,IAAA,+CACYE,EADZ,4BACwCJ,IAF1D,uBACGlC,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAewC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,yFACkBF,EAAAA,EAAAA,IAAA,+CACYE,EADZ,4BACwCJ,IAF1D,uBACGlC,EADH,EACGA,KADH,kBAGEA,GAHF,kE","sources":["components/MovieInfo/MovieInfo.js","components/FormMovie/FormMovie.js","pages/Movies.js","services/fetchAPI.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieInfo = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {data &&\n        data.map(({ original_title, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MovieInfo;\n","import { useState } from 'react';\n\nconst FormMovie = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onhandleChange = e => {\n    const queryToFetch = e.target.value;\n\n    setQuery(queryToFetch);\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n\n    if (!query) {\n      return;\n    }\n    onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={onHandleSubmit}>\n      <input type=\"text\" name=\"query\" onChange={onhandleChange} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default FormMovie;\n","import FormMovie from 'components/FormMovie/FormMovie';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from 'services/fetchAPI';\n\nconst Movies = () => {\n  const [data, setData] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryToFetch = searchParams.get('query');\n\n  const onSubmit = query => {\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    if (!queryToFetch) {\n      return;\n    }\n    fetchMovieByName(queryToFetch)\n      .then(data => setData(data.results))\n      .catch(error => console.error(`Error fetching movies by name:`, error));\n  }, [queryToFetch]);\n\n  return (\n    <>\n      <>\n        <FormMovie onSubmit={onSubmit} />\n      </>\n      <>\n        <MovieInfo data={data} />\n      </>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '656a2d8477e687091ecc4ce165a9fa7c';\n\nexport async function fetchMoviesTrend() {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieById(movie_id) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieByName(query) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function movieCredits(movie_id) {\n  const { data } = await axios.get(`\nhttps://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function movieReviews(movie_id) {\n  const { data } = await axios.get(`\nhttps://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}`);\n  return data;\n}\n"],"names":["data","location","useLocation","map","original_title","id","to","state","from","onSubmit","useState","query","setQuery","e","preventDefault","type","name","onChange","queryToFetch","target","value","setData","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovieByName","then","results","catch","error","console","MovieInfo","API_KEY","fetchMoviesTrend","axios","fetchMovieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}