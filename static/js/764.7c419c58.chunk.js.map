{"version":3,"file":"static/js/764.7c419c58.chunk.js","mappings":"sMAoEA,UAhEe,WACb,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAeJ,EAAaK,IAAI,OACtCC,QAAQC,IAAIH,GACZE,QAAQC,IAAIV,GA6BZ,OARAW,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,EAAAA,IAAiBL,GAAcM,MAAK,SAAAf,GAClCC,EAAQD,EAAKgB,QACd,GAEJ,GAAE,CAACP,KAGF,iCACE,+BACE,kBAAMQ,SAvBS,SAAAC,GACnBA,EAAMC,iBAEoC,KAAtCD,EAAME,OAAOC,SAASnB,MAAMoB,OAC9BR,EAAAA,EAAAA,IAAiBZ,GAAOa,MAAK,SAAAf,GAC3BC,EAAQD,EAAKgB,SACbV,EAAgB,CAAEiB,IAAKL,EAAME,OAAOC,SAASnB,MAAMoB,QACnDJ,EAAME,OAAOC,SAASnB,MAAMoB,MAAQ,EACrC,IACIhB,EAAgB,CAAC,EACzB,EAaK,WACE,kBAAOkB,KAAK,OAAOC,KAAK,QAAQC,SA/BjB,SAAAC,GACrB,IAAMzB,EAAQyB,EAAEP,OAAOE,MACT,KAAVpB,GAEGC,EAASD,EACjB,KA2BO,mBAAQsB,KAAK,SAAb,0BAGJ,+BACE,wBACGxB,GACCA,EAAK4B,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACd,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM1B,GAAlC,SACGuB,KAFID,EAMZ,UAKZ,C,+LChEKK,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,kEACsCF,IAH1D,uBAEKlC,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHW,QAAQC,IAAR,MAPG,gFAWA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAEoBF,EAAAA,EAAAA,IAAA,6CACiBE,EADjB,oBACqCJ,IAHzD,uBAEKlC,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHW,QAAQC,IAAR,MAPG,gFAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCZ,GAAhC,kGAEoBkC,EAAAA,EAAAA,IAAA,0DAC8BlC,EAD9B,oBAC+CgC,IAHnE,uBAEKlC,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHW,QAAQC,IAAR,MAPG,gFAWA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,kGAEoBF,EAAAA,EAAAA,IAAA,+CACUE,EADV,4BACsCJ,IAH1D,uBAEKlC,EAFL,EAEKA,KAFL,kBAIIA,GAJJ,gCAMHW,QAAQC,IAAR,MANG,gFAUA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,kGAEoBF,EAAAA,EAAAA,IAAA,+CACUE,EADV,4BACsCJ,IAH1D,uBAEKlC,EAFL,EAEKA,KAFL,kBAIIA,GAJJ,gCAMHW,QAAQC,IAAR,MANG,gF","sources":["pages/Movies.js","services/fetchAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from 'services/fetchAPI';\n\nconst Movies = () => {\n  const [data, setData] = useState(null);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const queryToFetch = searchParams.get('key');\n  console.log(queryToFetch);\n  console.log(query);\n\n  const onhandleChange = e => {\n    const query = e.target.value;\n    if (query === '') {\n      return;\n    } else setQuery(query);\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n\n    if (event.target.elements.query.value !== '') {\n      fetchMovieByName(query).then(data => {\n        setData(data.results);\n        setSearchParams({ key: event.target.elements.query.value });\n        event.target.elements.query.value = '';\n      });\n    } else setSearchParams({});\n  };\n\n  useEffect(() => {\n    if (queryToFetch) {\n      fetchMovieByName(queryToFetch).then(data => {\n        setData(data.results);\n      });\n    } else return;\n  }, [queryToFetch]);\n\n  return (\n    <>\n      <>\n        <form onSubmit={onSubmitForm}>\n          <input type=\"text\" name=\"query\" onChange={onhandleChange} />\n          <button type=\"submit\">Search</button>\n        </form>\n      </>\n      <>\n        <ul>\n          {data &&\n            data.map(({ id, original_title }) => {\n              return (\n                <li key={id}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    {original_title}\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      </>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '656a2d8477e687091ecc4ce165a9fa7c';\n\nexport async function fetchMoviesTrend() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movie_id) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieByName(query) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function movieCredits(movie_id) {\n  try {\n    const { data } = await axios.get(`\nhttps://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function movieReviews(movie_id) {\n  try {\n    const { data } = await axios.get(`\nhttps://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["useState","data","setData","query","setQuery","useSearchParams","searchParams","setSearchParams","location","useLocation","queryToFetch","get","console","log","useEffect","fetchMovieByName","then","results","onSubmit","event","preventDefault","target","elements","value","key","type","name","onChange","e","map","id","original_title","to","state","from","API_KEY","fetchMoviesTrend","axios","fetchMovieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}